AC_DEFUN([AC_FYI], [echo "FYI: " $1])

AC_INIT(gconf/gconf.h)

AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE(GConf, 0.3)

AM_MAINTAINER_MODE

AC_PROG_CC
AC_PROG_CXX
AC_ISC_POSIX
AC_HEADER_STDC
AC_ARG_PROGRAM
AM_PROG_LIBTOOL

dnl libtool versioning for guile wrapper

SCMGCONF_CURRENT=0
SCMGCONF_REVISION=0
SCMGCONF_AGE=0

AC_SUBST(SCMGCONF_CURRENT)
AC_SUBST(SCMGCONF_REVISION)
AC_SUBST(SCMGCONF_AGE)

dnl libtool versioning for GConfClient wrapper

GCONFGTK_CURRENT=0
GCONFGTK_REVISION=0
GCONFGTK_AGE=0

AC_SUBST(GCONFGTK_CURRENT)
AC_SUBST(GCONFGTK_REVISION)
AC_SUBST(GCONFGTK_AGE)

dnl libtool versioning for libgconf-client

dnl increment if the interface has additions, changes, removals.
GCONF_CURRENT=8

dnl increment any time the source changes; set to 
dnl  0 if you increment CURRENT
GCONF_REVISION=0

dnl increment if any interfaces have been added; set to 0
dnl  if any interfaces have been removed. removal has 
dnl  precedence over adding, so set to 0 if both happened.
GCONF_AGE=0

AC_SUBST(GCONF_CURRENT)
AC_SUBST(GCONF_REVISION)
AC_SUBST(GCONF_AGE)

dnl Default to debug spew for now
AC_ARG_ENABLE(debug, 
            [  --enable-debug=[no/yes]      Compile with debug checks.],,enable_debug=yes)

if test "x$enable_debug" = "xyes"; then
        CFLAGS="$CFLAGS -DGCONF_ENABLE_DEBUG=1"
        AC_FYI("Will build with debugging spew and checks")
else
        CFLAGS="$CFLAGS -DG_DISABLE_CHECKS=1 -DG_DISABLE_ASSERT=1"
        AC_FYI("Will build without debugging code")
fi

AM_PATH_GLIB(1.2.0,,AC_MSG_ERROR(glib not found),gmodule)
AM_PATH_OAF(0.1.0,,AC_MSG_ERROR([OAF not found]))
AM_PATH_GTK(1.2.0,,HAVE_GTK=no)

AM_CONDITIONAL(GTK, test x$HAVE_GTK != xno)

AC_PATH_PROG(XML_CONFIG,xml-config,no)
if test x$XML_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find xml-config)
fi
XML_LIBS=`$XML_CONFIG --libs`
XML_CFLAGS=`$XML_CONFIG --cflags`
AC_SUBST(XML_LIBS)
AC_SUBST(XML_CFLAGS)

AC_CHECK_LIB(popt, poptGetArg, POPT_LIBS=-lpopt,
	[AC_CHECK_HEADER(popt.h, , AC_MSG_ERROR([[
*** Couldn't find popt. Please download and install from
*** ftp://ftp.redhat.com/pub/redhat/code/popt and try again.]]))])
AC_SUBST(POPT_LIBS)

AC_PATH_PROG(ORBIT_CONFIG,orbit-config,no)
if test x$ORBIT_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find orbit-config)
fi

ORBIT_LIBS=`$ORBIT_CONFIG --libs server`
ORBIT_CFLAGS=`$ORBIT_CONFIG --cflags server`
AC_SUBST(ORBIT_LIBS)
AC_SUBST(ORBIT_CFLAGS)

AC_PATH_PROG(GUILE_CONFIG,guile-config,no)
if (test x$GUILE_CONFIG = xno); then
  AC_MSG_WARN(didn't find guile-config, won't build Guile wrappers)
else
  GUILE_LIBS=`$GUILE_CONFIG link`
  GUILE_CFLAGS=`$GUILE_CONFIG compile`
fi
if (test -z "$GUILE_LIBS"); then
  AC_MSG_WARN(guile-config reports no libraries, won't build Guile wrappers)
fi

AM_CONDITIONAL(GUILE, test -n "$GUILE_LIBS")
AC_SUBST(GUILE_LIBS)
AC_SUBST(GUILE_CFLAGS)

AC_CHECK_HEADER(pthread.h, have_pthreads=yes)
AM_CONDITIONAL(PTHREADS, test -n "$have_pthreads")

AC_CHECK_FUNCS(nanosleep)
AC_CHECK_FUNCS(usleep)

ALL_LINGUAS="da no pt_BR uk"

AM_GNU_GETTEXT

CFLAGS="$CFLAGS -Wall"

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

## Just for debugging purposes
absolute_top_srcdir=`pwd`
AC_SUBST(absolute_top_srcdir)

AC_OUTPUT([
Makefile
gconf-config
gconf/Makefile
backends/Makefile
wrappers/Makefile
wrappers/guile/Makefile
wrappers/gtk/Makefile
intl/Makefile
po/Makefile.in
doc/Makefile
doc/gconf/Makefile
examples/Makefile
tests/Makefile
],
chmod +x gconf-config)


