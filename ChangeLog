1999-11-07  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf.c (reinstall_listeners_for_all_engines): Function to
	iterate over all engines and do the context
	reinstallation. However, it's not used yet because we also need 
	to regenerate the context IDs.

	* gconf/gconfd.c: Add a ConfigServer_Context field to GConfContext
	(register_context): fill in the ConfigServer_Context field
	(context_new): init context field to invalid context

	* gconf/gconf.c (register_engine): Keep a hash from context ID's 
	to GConfEngine, because we no longer have the global connection 
	table (that table was broken anyway).
	(gconf_engine_blank): new function shared by the GConfEngine
	constructors (contains previous contents of gconf_engine_new, 
	separate function required by registration stuff)
	(gconf_engine_new): Create blank engine, then register it
	(gconf_engine_new_from_address): register the engine
	(gconf_engine_unref): unregister the engine

	* gconf/GConf.idl: Add a context ID to the argument
	list of the notification.

	* gconf/gconf.c (gconf_server_broken): New predicate, asks if an
	exception is set indicating that our server is hosed.
	(gconf_detach_config_server): Function to release the server
	object reference and set it to nil
	(gconf_engine_new_from_address): Detach server and retry if
	appropriate.
	(gconf_notify_add): Detach and respawn if needed
	(gconf_notify_remove): ditto
	(gconf_set): ditto
	(gconf_associate_schema): ditto
	(gconf_unset): ditto
	(gconf_all_entries): ditto
	(gconf_all_dirs): ditto
	(gconf_suggest_sync): ditto
	(gconf_notify_add): remove debugging spew
	(gconf_cnxn_new): Add namespace_section to GConfCnxn struct
	(gconf_cnxn_destroy): free namespace_section
	(GConfEnginePrivate): Put the connection table in here, it is
	per-context (and thus per-GConfEngine), should not be global.
	(gconf_init): don't create CnxnTable here, create it for each engine.
	(gconf_engine_new_from_address): remove redundant refcount
	initialization
	(gconf_engine_unref): Destroy CnxnTable, and free the engine
	struct itself.
	(notify): remove debug spew, reflect new signature of notify function

1999-11-07  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf-internals.c: #include <locale.h>, oops

1999-11-07  Havoc Pennington  <hp@pobox.com>

	* tests/testschemas.c (check_schema_storage): Properly consider
	that schema fields can be NULL

	* backends/xml-backend.c (entry_value): Properly consider that
	a schema can have a NULL locale

	* gconf/gconf.c (gconf_get_with_locale): New function
	(gconf_get): just calls get_with_locale() with a NULL locale
	(gconf_get_schema): Use get_with_locale()

	* gconf/gconf-internals.c (gconf_current_locale): So I don't have
	to think about setlocale()

	* tests/testschemas.c: New test program for schema stuff
	
1999-11-06  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf.c (gconf_associate_schema): Add function to associate 
	a schema name with a key.

1999-10-28  Havoc Pennington  <hp@pobox.com>

	* backends/xml-backend.c (query_value): Add locale
	(dir_get_value): add locale
	(entry_value): new function gets the value from an entry, 
	looking up a new value by locale if necessary.

	(xentry_extract_value): locale argument added, but needs to 
	be implemented.

	* gconf/gconf-backend.h: Add locale to query_value in vtable

	* gconf/gconf-sources.c (gconf_source_query_value): Add locale
	(gconf_sources_query_value): Add locale

	* gconf/gconfd.c (gconfd_lookup_with_locale): Implement new 
	IDL method
	(context_query_value): Add locale

	* gconf/GConf.idl: Add lookup_with_locale() method

	* gconf/gconf-internals.c (fill_corba_schema_from_gconf_schema): 
	Handle case where some schema fields are NULL, handle locale field.
	(gconf_schema_from_corba_schema): Handle locale field.

	* gconf/gconf-schema.c (gconf_schema_set_locale): New function

	* gconf/gconftool.c: Clean up so it is easier to deal with

1999-10-28  Havoc Pennington  <hp@pobox.com>

	* gconf/gconfd.c: Rework the sync code; now, any change queues a
	sync in 1 minute. If a client calls suggest_sync(), we sync in an
	idle (as soon as the event loop quiets down). Also, we now sync 
	on shutdown.

	* tests/testgconf.c: Fix to compile

	* tests/Makefile.am (testgconf_LDADD): Fix Makefile.am to use new
	library name

1999-10-27  Havoc Pennington  <hp@pobox.com>

	* configure.in: Add --enable-debug option to G_DISABLE_CHECKS as needed

        * gconf/wrappers/gtk/testgconfclient.c: Test program for the GTK+ 
	client wrapper.
	
	* gconf/gconf-sources.c (gconf_sources_query_value): 
	Wasn't handling errors; now we report errors. The bad thing is,
	it might be better to go ahead and do our best despite the error.

	* gconf/gconf.c (gconf_init): Actually set the have_initted variable.	

	* wrappers/gtk/Makefile.am (libgconf_gtk_la_LIBADD): Don't try to 
	link with libgconf;
	Add testgconfclient target.

	* wrappers/gtk/gconf-client.h, wrappers/gtk/gconf-client.c: Make
	it compile
	
	* configure.in: Generate Makefile for GtkObject wrapper

1999-10-27  Havoc Pennington  <hp@pobox.com>

	* gconf-editor/Makefile.am (gconf_editor_LDADD): 
	link to libgconf.la

	* gconf/Makefile.am: Renamed the shared lib to libgconf instead of
	libgconf-client.
	
	* wrappers/gtk/Makefile.am: Renamed gconf-gtk.[hc] to
	gconf-client.[hc] via CVS surgery, then updated Makefile.

1999-10-21  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf.c (gconf_key_is_below): New function, tells you if a
	key is below another key in the directory hierarchy.

1999-10-20  Havoc Pennington  <hp@pobox.com>

	* gconf/gconfd.c, gconf/gconf-sources.c: Finish stuff from the
	17th (use GConfError throughout, etc.)

	* gconf/gconfd-error.h, gconf/gconfd-error.c: Remove the broken
	old error stuff, even gconfd no longer uses it.
	
1999-10-17  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf-sources.c: Use GConfError** throughout, make the
	_source_ functions static
	(gconf_sources_query_value): Use the new flags and readable
	function
	(gconf_sources_set_value): use the new flags and writeable
	function

	* gconf/gconf-error.c (gconf_error_copy): new function
	(gconf_compose_errors): new function

        * backends/xml-backend.c: Throughout, use a GConfError** argument
	instead of the global errno thing
	
	* gconf/gconf-error.c (gconf_set_error): New function properly
	handles a GConfError** by setting error or ignoring if NULL, 
	also warns if you "stack" two errors on top of each other.
	(gconf_clear_error): New function clears a GConfError** 

	* gconf/gconfd.c: don't include gconfd-error.h

	* backends/xml-backend.c: Remove inclusion of gconfd-error.h

	* gconf/gconf-backend.h: Add lock/unlock and readable/writeable
	functions to the backend vtable, and add error arguments to 
	all functions in the vtable.

	* gconf/gconfd.c (safe_g_hash_table_insert): priority GCL_WARNING

	* backends/xml-backend.c (safe_g_hash_table_insert): make
	it priority GCL_WARNING.

	* gconf/gconf-sources.h: GCONF_SOURCE_ALL_WRITEABLE,
	GCONF_SOURCE_ALL_READABLE flags to short-circuit calls to the new
	writeable/readable vtable functions.

1999-10-17  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf-orbit.h: Include orb/orbit.h instead of GConf.h

1999-10-17  Havoc Pennington  <hp@pobox.com>

	* backends/xml-backend.c: Use %gconf.xml instead of .gconf.xml 
	for the magic files.

1999-10-17  Havoc Pennington  <hp@pobox.com>

	* tests/runtests.sh: Make this script work

	* gconf/gconftool.c: Don't use -s for --spawn, since it's used for
	--set.

	* gconf/gconf.c (gconf_get_config_server): Clear the error
	from the initial ping if we're asked to start the server.
	(gconf_engine_unref): No error spew if server is down when 
	the engine is destroyed.

	Throughout: Make sure error is set but don't require a 
	specific error type

	* gconf/gconf-internals.c (gconf_read_server_ior): Set error 
	if the server info file doesn't exist

	* gconf/gconf.c (try_to_contact_server): Add a check for setting 
	the error properly

	* gconf/gconftool.c (main): Switch to gconf_suggest_sync()
	instead of gconf_sync()

	* gconf/gconfd.c: Add a GConfContext::sync_idle field, to 
	store the source ID of an idle function that performs a sync.
	(context_destroy): Remove the sync idle 
	(context_hibernate): Check that sync idle is 0
	(context_sync): Add the sync idle if it doesn't exist

	* gconf/gconf.c (gconf_suggest_sync): gconf_sync() renamed to
	gconf_suggest_sync(), because a sync is for all clients;
	suggest_sync() means "I just finished a large block of operations,
	so I'm suggesting that it would be efficient and data-preserving
	to schedule a sync in the near future." gconf_sync() didn't 
	make much sense because it was global, not per-client.
	
1999-10-17  Havoc Pennington  <hp@pobox.com>

	* For all files, s/G_CONF/GCONF

1999-10-12  Havoc Pennington  <hp@pobox.com>

	* gconf/gconfd.c: Use GConfListeners to handle listener
	registration and notification

1999-10-12  Havoc Pennington  <hp@pobox.com>
	
	* gconf/gconf-listeners.c (ltable_insert): Was failing to init 
	the node in the flat array of nodes if the listener location 
	was NULL. 
	(gconf_listeners_count): new function reports number of listeners
	(ltable_new): init next_cnxn to 1 instead of 0 
	(ltable_remove): Do a better job of cleaning up dead 
	tree nodes (go up looking for empty parent nodes)
	(ltable_destroy): type error, was calling listener_destroy() 
	on the GNodes. Oops. fixed, now use g_node_traverse() to 
	destroy the node contents.
	(ltable_new): don't create the root node until it's needed
	(ltable_insert): add root node here if needed
	(ltable_remove): zero lt->tree if we destroy it
	
	* tests/testlisteners.c: New test program for GConfListeners, 
	fairly comprehensive

	* tests/Makefile.am: add testlisteners, put EFENCE at the end of 
	the link line

1999-10-12  Havoc Pennington  <hp@pobox.com>

	* gconf/Makefile.am: Fixes - remove some public headers from
	libgconf_client_SOURCES, look for GConf.idl in $(srcdir) (bug from
	Wichert Akkerman)

	* gconf/gconf-listeners.h, gconf/gconf-listeners.c: New files,
	compile but are not tested. Moves listener tree interface into 
	a public header to re-use in GTK+ wrapper.

1999-10-11  Havoc Pennington  <hp@pobox.com>

	* For all files, s/g_conf/gconf

1999-10-05  Havoc Pennington  <hp@pobox.com>

	* tests/testgconf.c (check_list_storage): Add checks for empty
	lists, and all the various list types.

	* gconf/gconf-value.c (g_conf_value_to_string): Fix a segfault
	(not always allocating a large enough buffer)

1999-10-05  Havoc Pennington  <hp@pobox.com>

	* configure.in: 0.3, bump soname

1999-10-04  Havoc Pennington  <hp@pobox.com>

	* tests/testgconf.c (main): Add checks for getting/setting lists,
	bools, floats, and ints

	* gconf/gconf-internals.c (fill_corba_value_from_g_conf_value): We
	have to set the release flag on a sequence inside a union, since
	the sequence isn't default initialized as it normally would be.
	Plugs a big memory leak (all sequence buffers).

	* backends/xml-backend.c (dir_fill_cache_from_doc): Plug a leak
	where we set entry->name and then reset it in entry_fill()
	(entry_destroy): Free entry->mod_user
	(x_shutdown): Renamed shutdown() to x_shutdown() to avoid
	namespace clash with some libcs. Bug report from Bjorn Andersson
	<ban@lifix.fi>.

	* gconf/gconf-internals.c (g_conf_log): Plug memory leak (not
	freeing log string)

	* gconf/gconfd.c (gconfd_set): Plug memory leak (not freeing the GConfValue)

	* tests/Makefile.am: Make testgconf noinst

	* gconf/gconfd.c (main): check GCONFD_NO_DAEMON environment
	variable to run in no-daemon mode for debugging. Needless to say 
	this does NOT work if you are trying to use gconf for real.

	* gconf/gconf-internals.c (fill_corba_value_from_g_conf_value):
	Fill in the list type in the CORBA value
	(g_conf_value_from_corba_value): Fill in the list type in the 
	GConfValue

	* gconf/GConf.idl: Create ConfigList type to past the list type 
	along with the sequence of values

	* gconf/gconf-value.c (g_conf_value_set_list): New function, list
	setter that copies the list

	* gconf/gconf.c (g_conf_unset, g_conf_set): return boolean to
	indicate success

	* gconf/gconf-value.c (g_conf_value_new_from_string): Rewrite the
	bool string parser with switch, accept y/n as values.

1999-10-01  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf-sources.c (g_conf_sources_query_value): Check for 
	errors when we query the default value from the schema.

	* backends/xml-backend.c (entry_fill): If the schema key for a key is 
	invalid, don't load it.

1999-09-30  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf-sources.c (g_conf_key_check_hack): Clear error 
	before we check the key

	* backends/xml-backend.c (dir_unset_value): Actually set the
	entry's value to NULL
	(entry_destroy): check whether Entry::value is NULL. Not sure 
	why I didn't check; I think NULL is allowed, but if not 
	we will have problems I guess.

	* tests/testgconf.c: Easiest to just write the test suite in
	C. Tests set/get and unset for strings so far.

1999-09-29  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf.sgml: Update docs

1999-09-29  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf-conf.h: Replaced with gconf-engine.h

	* gconf/Makefile.am: use gconf-engine.h

	* gconf/gconf.c, gconf/gconf.h, gconf/gconftool.c,
	gconf-editor/app.c, wrappers/guile/scm-gconf.c: 
	Use GConfEngine name instead of GConf

1999-09-29  Rodrigo Stulzer Lopes <rodrigo@conectiva.com.br>

	* configure.in: added pt_BR to ALL_LINGUAS

1999-09-29  Havoc Pennington  <hp@pobox.com>

	* backends/xml-backend.c: include gconfd-error.h and gconf.h, 
	change error checking to new system as needed

	* gconf/Makefile.am: Put more stuff in gconfd_SOURCES instead of
	client lib, add new files

	* gconf/gconf-backend.h: include gconf-sources.h

	* gconf/gconf-conf.h: add error arg to g_conf_new_from_address

	* gconf/gconf-error.c: move strerror in here, fixups,
	preconditions

	* gconf/gconf-internals.c, gconf/gconf-sources.c: move all sources
	stuff to new gconf-sources file

	* gconf/gconf-orbit.c: Check for failure to get lock

	* All the rest of this giant diff: Move to new error-handling
	scheme
	
1999-09-26  Havoc Pennington  <hp@pobox.com>

	* gconf/Makefile.am: add gconf-error.h, gconf-conf.h headers,
	gconf-value.c file

	* gconf/gconf-error.h, gconf/gconf-conf.h, gconf/gconf-value.c: 
	New files, just rearranging old files, no new code (well, there is 
	a new GConfError object but it's unused)

	* gconf/gconf-internals.c: Move the value, metainfo, and entry
	datatypes to gconf-value.c

	* gconf/gconf.c, gconf/gconf.h: Remove appname argument from
	g_conf_init(), remove g_conf_global_appname() function.

	* gconf/gconftool.c: don't pass appname to g_conf_init()

	* gconf-editor/gconf-editor.c: Ditto
	
1999-09-25  Kjartan Maraas  <kmaraas@online.no>

	* configure.in: Added "da" to ALL_LINGUAS.
	
1999-09-19  Havoc Pennington  <hp@pobox.com>

	* NEWS, README: put something in here

	* Makefile.am: conditionally include gconf-editor if we have 
	GNOME

	* autogen.sh: make it more like "macros" autogen.sh
	
	* configure.in: manually check for GNOME instead of using
	"macros"
	
	* macros, intl: remove these subdirs, autogen.sh now
	generates intl

	* gconf/gconf.c: fix array size for strerror messages

	* gconf-editor/Makefile.am: use new GNOME variables

	* gconf-editor/gconf-editor.c: use new g_conf_init() 
	signature

	* gconf-editor/menus.h, gconf-editor/menus.c: These 
	hadn't been added
	
1999-09-19  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf.h: Add G_CONF_OVERRIDDEN error if you try to 
	set a value which will have no effect due to a read-only
	setting earlier in the path.

	* gconf/gconf.c: Add G_CONF_OVERRIDDEN to strerror, etc.

	* gconf/GConf.idl: add ConfigOverridden to pass it across the
	CORBA link

	* doc/gconf.sgml: Add more stuff to docs
	
1999-09-17  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf-internals.c (subst_variables): Add a new function to
	perform variable substitution on addresses in the path file. 
	Supports $(HOME), $(USER), and $(ENV_ANYENVVARNAME)

	* Makefile.am: Add "doc" subdir

	* doc/Makefile.am: Added

	* doc/gconf.sgml: write more docs
	
1999-09-03  Havoc Pennington  <hp@pobox.com>

	* configure.in: Set library version info variables, and locate
	Guile libraries, etc.	

	* wrappers/Makefile.am: conditionally build Guile subdir if we
	found guile.

	* wrappers/guile: new subdir with the basic files/build for Guile 
	bindings, will add the actual bindings later. 
	
1999-09-03  Havoc Pennington  <hp@pobox.com>

	* configure.in: set POPT_LIBS instead of adding -lpopt to generic
	LDFLAGS; this was causing libtool to fail to generate the .so 
	file for the XML backend module.

	* gconf/Makefile.am: use POPT_LIBS

	* gconf/gconf-backend.c: change some g_warning to g_conf_log

1999-09-03  Havoc Pennington  <hp@pobox.com>

	* gconf/gconfd.c: Every hour or so, hibernate all contexts that
	haven't been accessed in 45 minutes. Make some assorted changes
	to support that.

1999-09-02  Havoc Pennington  <hp@pobox.com>

	* gconf/gconf-internals.h, gconf/gconf-internals.c: Add a new
	g_conf_log() function for logging errors in backends; 
	for now this wraps syslog() but if we eventually have non-daemon
	direct access to backends, we will need to change it. Use
	g_conf_log() throughout this file instead of printf() and
	g_warning().

	* gconf/backends/xml-backend.c: Install a timeout which cleans
	old stuff out of the cache every 5 minutes; use g_conf_log 
	to report problems.

	* gconf/gconfd.c: Use g_conf_log(); log "exiting" later than we 
	had been, after shutting everything down. 

1999-09-02  Havoc Pennington  <hp@pobox.com>

	* backends/Makefile.am: Install backends in $(libdir)/gconf

	* gconf/Makefile.am: Look for backends in $(libdir)/gconf

	* gconf/gconf-backend.c (g_conf_backend_file): Use
	g_module_build_path() to build the module path

        * gconf/gconf-orbit.c (g_conf_get_cookie_reliably): Make the 
	~/.gconfd directory if necessary.

	Lots of error-checking added.

	* gconf/gconfd.c: Mark a lot of strings for translation; include 
	username in the syslog spew.

1999-09-02  Havoc Pennington  <hp@pobox.com>

	* gconf/gconfd.c (main): If the orb init fails, syslog the 
	GConf error.

	* gconf/gconf-orbit.c: Add tons of error checks/reports

1999-09-01  Tim P. Gerla  <timg@means.net>

	* configure.in: Added test for popt.

1999-09-01  Havoc Pennington  <hp@pobox.com>

	* backends/xml-backend.c (dir_get_value): Fix a segfault, check
	that an Entry != NULL before dereferencing it

	* GConf.idl: Add ConfigException and ConfigErrorType to pass
	errors from server to client

	* gconf.c (g_conf_handle_corba_exception): set the GConf error
	based on CORBA error, if any, and free the exception. 
	Use throughout the file to receive server errors. 

	* gconfd.c (g_conf_set_exception): set the CORBA exception based
	on the GConf error, if any. Use this function throughout the file
	to send errors to clients. 
	(g_conf_nuke_dir): Remove this obsolete function
	(context_set): don't notify listeners of a change if an error
	occurred

1999-09-01  Havoc Pennington  <hp@pobox.com>

	* configure.in: add gmodule check to AM_PATH_GLIB, add an error if
	glib isn't found, use detected $XML_CONFIG to instead of
	xml-config, AC_PATH_PROG orbit-config, check for C++ compiler
	(since we'll have a C++ wrapper soon)

	* gconf/Makefile.am: Assume GMODULE_CFLAGS are now included in
	GLIB_CFLAGS since we fixed configure.in

	* gconf/gconf.c, gconf/gconf.h: Reference count the GConf object, 
	add extern "C" when using C++

	* gconf/gconftool.c: unref instead of destroying the GConf object

1999-08-31  Dave Camp  <campd@oit.edu>

	* gconf/gconf.c (g_conf_is_initialized): New function.

1999-08-31  Dave Camp  <campd@oit.edu>

	* gconf/gconftool.c (main): Changed --dir-exists to return 0 if 
	the dir exists, and 2 if it does not.

1999-08-31  Dave Camp  <campd@oit.edu>

	* gconf/gconftool.c (options): Added "--dir-exists".
	(main): If dir_exists is on the command line, check if the argument dir
	exists.

	* gconf/gconfd.c (server_epv): Added gconfd_dir_exists.
	(gconfd_dir_exists): New function.
	(context_dir_exists): New function.

	* gconf/gconf.c (g_conf_dir_exists): New function.

	* gconf/gconf-internals.c (g_conf_sources_dir_exists): New function.
	(g_conf_source_dir_exists): New function.

	* gconf/gconf-backend.h (GConfBackendVTable): Added a dir_exists 
	entry. 

	* gconf/GConf.idl (dir_exists): New function.

	* backends/xml-backend.c (dir_exists): New function.
	(xml_vtable): Added dir_exists.

1999-08-30  Dave Camp  <campd@oit.edu>

	* gconf/gconf.h: #include gconf-orbit.h.

	* gconf/Makefile.am (gconfinclude_HEADERS): Install gconf-orbit.h,
	GConf.h

1999-08-29  Dave Camp  <campd@oit.edu>

	* Makefile.am (bin_SCRIPTS): Install gconf-config.

	* configure.in (AC_OUTPUT): Create gconf-config. 

	* gconf/Makefile.am: Install gconf.h and gconf-schema.h.
	

1999-08-29  Dave Camp  <campd@oit.edu>

	* configure.in (XML_LIBS): Use xml-config.

1999-08-29  Kjartan Maraas  <kmaraas@online.no>

	* configure.in: Added "no" to ALL_LINGUAS
	
